openapi: 3.0.2
info:
  version: 1.0.0
  title: flop-strategy
servers:
  - url: 'http://localhost:8080'
    description: Local server
paths:
  '/flop/situations/parameter':
    get:
      summary: Get parameter for flop situations
      operationId: GetFlopSituationsParameter
      tags:
        - flopStrategy
      parameters:
        - $ref: '#/components/parameters/HeroPosition'
        - $ref: '#/components/parameters/VillainPosition'
        - $ref: '#/components/parameters/PotType'
        - $ref: '#/components/parameters/HighCard'
        - $ref: '#/components/parameters/BoardPairType'
        - $ref: '#/components/parameters/BoardSuitsType'
        - $ref: '#/components/parameters/BoardConnectType'
      responses:
        '200':
          description: Parameter for flop situations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFlopSituationsParameterResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    GetFlopSituationsParameterResponse:
      required:
        - ip_bet_freq
        - oop_bet_freq
        - ip_check_freq
        - oop_check_freq
        - ip_33_bet_freq
        - oop_33_bet_freq
        - ip_67_bet_freq
        - oop_67_bet_freq
        - ip_equity
        - oop_equity
        - hero_position_type
      properties:
        ip_bet_freq:
          type: number
          format: float
        oop_bet_freq:
          type: number
          format: float
        ip_check_freq:
          type: number
          format: float
        oop_check_freq:
          type: number
          format: float
        ip_33_bet_freq:
          type: number
          format: float
        oop_33_bet_freq:
          type: number
          format: float
        ip_67_bet_freq:
          type: number
          format: float
        oop_67_bet_freq:
          type: number
          format: float
        ip_equity:
          type: number
          format: float
        oop_equity:
          type: number
          format: float
        hero_position_type:
          $ref: '#/components/schemas/PlayerPositionType'
        image_url:
          type: string
        description:
          type: string
    PlayerPosition:
      type: string
      enum:
        - PlayerPositionSB
        - PlayerPositionBB
        - PlayerPositionUTG
        - PlayerPositionHJ
        - PlayerPositionCO
        - PlayerPositionBTN
    PlayerPositionType:
      type: string
      enum:
        - PlayerPositionTypeInPosition
        - PlayerPositionTypeOutOfPosition
    PotType:
      type: string
      enum:
        - PotTypeSRP
        - PotType_3_Bet
        - PotType_4_Bet
    HighCard:
      type: string
      enum:
        - HighCardA
        - HighCardK
        - HighCardQ
        - HighCardJ
        - HighCardT
        - HighCard_8_To_9
        - HighCard_5_To_7
        - HighCard_2_To_4
    BoardPairType:
      type: string
      enum:
        - BoardPairTypeUnpaired
        - BoardPairTypePaired
        - BoardPairTypeTrips
    BoardSuitsType:
      type: string
      enum:
        - BoardSuitsTypeMonoTone
        - BoardSuitsTypeTwoTone
        - BoardSuitsTypeRainbow
    BoardConnectType:
      type: string
      enum:
        - BoardConnectTypeDisconnect
        - BoardConnectTypeConnected
    Error:
      properties:
        code:
          type: string
          description: |
            You can spot the error cause in detail by checking this code.

            * `INVALID_ARGUMENT` - The arguments is invalid
          enum:
            - CodeInvalidArgument
        message:
          description: A developer-facing error message.
          type: string
        localized_message:
          description: A user-friendly error message.
          type: string
  parameters:
    HeroPosition:
      name: hero-position
      in: query
      schema:
        $ref: '#/components/schemas/PlayerPosition'
    VillainPosition:
      name: villain-position
      in: query
      schema:
        $ref: '#/components/schemas/PlayerPosition'
    PotType:
      name: pot-type
      in: query
      schema:
        $ref: '#/components/schemas/PotType'
    HighCard:
      name: high-card
      in: query
      schema:
        $ref: '#/components/schemas/HighCard'
    BoardPairType:
      name: board-pair-type
      in: query
      schema:
        $ref: '#/components/schemas/BoardPairType'
    BoardSuitsType:
      name: board-suits-type
      in: query
      schema:
        $ref: '#/components/schemas/BoardSuitsType'
    BoardConnectType:
      name: board-connect-type
      in: query
      schema:
        $ref: '#/components/schemas/BoardConnectType'